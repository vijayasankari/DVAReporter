from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QListWidget, QListWidgetItem,
    QPushButton, QComboBox
)
from db import get_all_vulnerabilities, get_full_vulnerability
import sqlite3


class VulnerabilityTab(QWidget):
    def __init__(self):
        super().__init__()
        self.all_vulns = get_all_vulnerabilities()
        self.selected_vulns = []

        self.layout = QHBoxLayout()

        # Left: List of all DB vulnerabilities
        self.left_list = QListWidget()
        self.left_list.itemClicked.connect(self.load_selected_vuln)
        self.layout.addWidget(self.left_list)

        # Middle panel: severity selector and action buttons
        center_panel = QVBoxLayout()
        self.severity_label = QLabel("Change Severity:")
        self.severity_override = QComboBox()
        self.severity_override.addItems(["Low", "Medium", "High", "Critical"])

        self.selected_vuln_label = QLabel("Selected: None")
        self.move_to_report_btn = QPushButton("→ Add to Report")
        self.move_to_report_btn.clicked.connect(self.move_to_right)

        self.remove_from_report_btn = QPushButton("← Remove from Report")
        self.remove_from_report_btn.clicked.connect(self.remove_selected_from_right)

        center_panel.addWidget(self.selected_vuln_label)
        center_panel.addWidget(self.severity_label)
        center_panel.addWidget(self.severity_override)
        center_panel.addSpacing(10)
        center_panel.addWidget(self.move_to_report_btn)
        center_panel.addWidget(self.remove_from_report_btn)

        self.layout.addLayout(center_panel)

        # Right: List of selected vulnerabilities for report
        self.right_list = QListWidget()
        self.layout.addWidget(self.right_list)

        self.setLayout(self.layout)
        self.load_all_vulns()

    def load_all_vulns(self):
        self.left_list.clear()
        for vuln in self.all_vulns:
            item = QListWidgetItem(f"[{vuln['severity']}] {vuln['title']}")
            item.setData(1000, vuln['title'])  # Use title to fetch full details later
            self.left_list.addItem(item)

    def load_selected_vuln(self, item):
        title = item.data(1000)
        self.selected_vuln_label.setText(f"Selected: {title}")
        full = get_full_vulnerability(title)
        if full:
            severity = full.get("severity", "Medium")
            idx = self.severity_override.findText(severity)
            if idx >= 0:
                self.severity_override.setCurrentIndex(idx)

    def move_to_right(self):
        selected_items = self.left_list.selectedItems()
        if not selected_items:
            return

        for item in selected_items:
            title = item.data(1000)
            full_data = get_full_vulnerability(title)
            if full_data:
                # Override severity before adding
                full_data = full_data.copy()  # ensure we don't modify DB-backed instance
                full_data["severity"] = self.severity_override.currentText()

                self.selected_vulns.append(full_data)
                list_item = QListWidgetItem(f"[{full_data['severity']}] {full_data['title']}")
                list_item.setData(1000, full_data)
                self.right_list.addItem(list_item)

    def remove_selected_from_right(self):
        for item in self.right_list.selectedItems():
            data = item.data(1000)
            self.selected_vulns.remove(data)
            self.right_list.takeItem(self.right_list.row(item))

    def get_data(self):
        return self.selected_vulns

    def set_data(self, data):
        self.selected_vulns = data
        self.right_list.clear()
        for vuln in data:
            item = QListWidgetItem(f"[{vuln['severity']}] {vuln['title']}")
            item.setData(1000, vuln)
            self.right_list.addItem(item)

    def refresh_vulnerabilities(self):
        self.all_vulns = get_all_vulnerabilities()
        self.left_list.clear()
        for vuln in self.all_vulns:
            item = QListWidgetItem(f"[{vuln['severity']}] {vuln['title']}")
            item.setData(1000, vuln['title'])
            self.left_list.addItem(item)
